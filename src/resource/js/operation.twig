{% include 'params.twig' with {'operationId': operation.operationId, 'parameters': operation.parameters} %}

export function {{ operation.operationId }}(params: {{ operation.operationId }}Params, options:? FetchOptions): Promise<any> {
{% spaceless %}
{% set hasPathParameters = false %}

{% for parameter in operation.parameters %}
    {% if parameter.in == "path" %}
        {% set hasPathParameters = true %}
    {% endif %}
{% endfor %}
{% endspaceless %}
{% if hasPathParameters %}
{% for parameter in operation.parameters %}
{% if parameter.in == "path" %}
    if (params["{{ parameter.name }}"] == null) {
        throw new Error("Missing required parameter {{ parameter.name }} when calling {{ operation.operationId }}");
    }
{% endif %}
{% endfor %}

    const baseUrl = `{{ operation.path }}`.replace(`{${"id"}}`, `${params.id}`);
    delete params.id;
{% else %}
    const baseUrl = "{{ operation.path }}";
{% endif %}

    return request(baseUrl, params, "{{ operation.method|upper }}", options);
}
